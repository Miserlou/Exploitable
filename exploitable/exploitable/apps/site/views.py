from django.http import HttpResponseRedirect, HttpResponseNotFound
from django.http import Http404
from django.conf import settings
from django.contrib.auth.decorators import login_required
from django.shortcuts import get_object_or_404, render_to_response, Http404, HttpResponse
from django.template import loader, RequestContext
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_POST 
from django.views.decorators.http import require_http_methods
from django.contrib.auth.models import User
from django.contrib.admin.views.decorators import staff_member_required
from django.db.models import Q
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger
from django.views.generic.base import TemplateView

from exploitable.apps.accounts.models import BankProfile

def home(request):
    return render_to_response('index.html', {
        },
        context_instance=RequestContext(request))

def branch(request):

    try:
        term = request.GET['search']
    except Exception, e:
        term = ''

    return render_to_response('branch.html', {
            'term': term,
            'term_no_quotes': term.replace('\'', ''),
            'term_no_quotes_at_all': term.replace('\'', '').replace('"', ''),
            'results': "results",
        },
        context_instance=RequestContext(request))

@login_required
def dash(request):

    recent_users = BankProfile.objects.all()

    return render_to_response('dash.html', {
            'recent_users': recent_users,
        },
        context_instance=RequestContext(request))

@login_required
@csrf_exempt
def edit_profile(request):

    if request.POST:
        request.user.get_profile().bio = request.POST['bio']
        request.user.get_profile().save()

    return render_to_response('edit_profile.html', {
        },
        context_instance=RequestContext(request))
